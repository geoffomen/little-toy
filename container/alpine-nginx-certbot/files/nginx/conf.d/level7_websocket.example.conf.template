map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream websocket {
  server {{DOMAIN}}:9000 fail_timeout=0;
}


server {
    listen 80;
    listen [::]:80;
    server_name {{DOMAIN}};
    return 301 https://{{DOMAIN}}$request_uri;
}

server {
    listen 8000 ssl;
    listen [::]:8000 ssl;
    server_name {{DOMAIN}};

    access_log /var/log/nginx/access_{{DOMAIN}}.log main buffer=64k flush=3s;

    ssl_certificate /etc/letsencrypt/live/{{DOMAIN}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{DOMAIN}}/privkey.pem;
    # Enables a shared SSL cache with size that can hold around 8000 sessions.
    #ssl_session_cache shared:SSL:9m;
    ssl_session_timeout 9h;
    ssl_session_tickets off;
    # Specifies that our cipher suits should be preferred over client ciphers.
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES;
    ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;

    # dns resolver used by forward proxying
    resolver 9.9.9.9 1.1.1.1 8.8.8.8 116.116.116.116;
    
    # redirect server error pages to the static page
    error_page 404 /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /stream {
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
}

