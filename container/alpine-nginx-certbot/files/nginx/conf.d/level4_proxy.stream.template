upstream http_gatway {
    server 127.0.0.1:1443;
}

upstream other_gatway {
    server 127.0.0.1:9000;
}

# 通过SNI请求的服务器名称走不同的upstream，需要 SSLv3或TLSv1 以上版本提供支持。
# SNI(Server Name Indication)，在使用TLS的时候，服务端希望根据HTTP请求中HOST的不同，来决定使用不同的证书。
# 1) SNI是⼀个扩展的TLS计算机联⽹协议。
# 2) 在该协议下，在握⼿过程开始时客⼾端告诉服务端它正在连接的服务器的虚拟主机名称。
# 3) 这允许服务端在相同的IP地址和TCP端⼝号上呈现多个(不同的)证书。
# 4) 并且因此允许在相同的IP地址上提供多个安全HTTPS⽹站(或其他任何基于TLS的服务)。备注： ⽽不需要所有这些站点使⽤相同的证书
# 
# 核⼼过程
# [1]在Client Hello阶段，通过SNI扩展，将域名信息提前告诉服务端。
# [2]服务端根据域名取得对应的证书返回给客⼾端以完成校验过程。
map $ssl_preread_server_name $upstream {
    default http_gatway;
    other.example.com other_gatway;
}

# 根据不同的协议走不同的upstream
# map $ssl_preread_protocol $upstream{
#     default http_gatway;
#     "TLSv1.0" other_gatway;
# }

# 复用443端口
server {
    # reuseportbv 套接字端口共享。套接字端口共享选项允许多个套接字监听同一个绑定的网络地址和端口，
    # 这样一来内核就可以将外部的请求连接负载均衡到这些套接字上来。
    listen 443 reuseport;
    listen [::]:443 reuseport;

    # 允许在预读阶段从SSL/TSL握手过程中提取SNI、协议版本等信息。重点，一定要加这句。
    ssl_preread on;    

    resolver 9.9.9.9 1.1.1.1 8.8.8.8 116.116.116.116;

    proxy_pass $upstream;
}